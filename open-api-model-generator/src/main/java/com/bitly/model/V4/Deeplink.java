/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@bitly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bitly.model.V4;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Deeplink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-07T02:24:01.569+01:00[Europe/London]")
public class Deeplink {
  public static final String SERIALIZED_NAME_APP_URI_PATH = "app_uri_path";
  @SerializedName(SERIALIZED_NAME_APP_URI_PATH)
  private String appUriPath;

  public static final String SERIALIZED_NAME_INSTALL_TYPE = "install_type";
  @SerializedName(SERIALIZED_NAME_INSTALL_TYPE)
  private String installType;

  public static final String SERIALIZED_NAME_INSTALL_URL = "install_url";
  @SerializedName(SERIALIZED_NAME_INSTALL_URL)
  private String installUrl;

  public static final String SERIALIZED_NAME_APP_ID = "app_id";
  @SerializedName(SERIALIZED_NAME_APP_ID)
  private String appId;


  public Deeplink appUriPath(String appUriPath) {
    
    this.appUriPath = appUriPath;
    return this;
  }

   /**
   * Get appUriPath
   * @return appUriPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppUriPath() {
    return appUriPath;
  }


  public void setAppUriPath(String appUriPath) {
    this.appUriPath = appUriPath;
  }


  public Deeplink installType(String installType) {
    
    this.installType = installType;
    return this;
  }

   /**
   * Get installType
   * @return installType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstallType() {
    return installType;
  }


  public void setInstallType(String installType) {
    this.installType = installType;
  }


  public Deeplink installUrl(String installUrl) {
    
    this.installUrl = installUrl;
    return this;
  }

   /**
   * Get installUrl
   * @return installUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getInstallUrl() {
    return installUrl;
  }


  public void setInstallUrl(String installUrl) {
    this.installUrl = installUrl;
  }


  public Deeplink appId(String appId) {
    
    this.appId = appId;
    return this;
  }

   /**
   * Get appId
   * @return appId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAppId() {
    return appId;
  }


  public void setAppId(String appId) {
    this.appId = appId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Deeplink deeplink = (Deeplink) o;
    return Objects.equals(this.appUriPath, deeplink.appUriPath) &&
        Objects.equals(this.installType, deeplink.installType) &&
        Objects.equals(this.installUrl, deeplink.installUrl) &&
        Objects.equals(this.appId, deeplink.appId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(appUriPath, installType, installUrl, appId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Deeplink {\n");
    sb.append("    appUriPath: ").append(toIndentedString(appUriPath)).append("\n");
    sb.append("    installType: ").append(toIndentedString(installType)).append("\n");
    sb.append("    installUrl: ").append(toIndentedString(installUrl)).append("\n");
    sb.append("    appId: ").append(toIndentedString(appId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

