/*
 * Bitly API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: api@bitly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bitly.model.V4;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * the unit of time queried for (minute, hour, day, week, month)
 */
@JsonAdapter(TimeUnit.Adapter.class)
public enum TimeUnit {
  
  MINUTE("minute"),
  
  HOUR("hour"),
  
  DAY("day"),
  
  WEEK("week"),
  
  MONTH("month");

  private String value;

  TimeUnit(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TimeUnit fromValue(String value) {
    for (TimeUnit b : TimeUnit.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TimeUnit> {
    @Override
    public void write(final JsonWriter jsonWriter, final TimeUnit enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TimeUnit read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TimeUnit.fromValue(value);
    }
  }
}

